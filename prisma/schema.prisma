// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id        String   @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  fullname  String   @map("fullname") @db.VarChar(32)
  email     String   @map("email")
  password  String   @map("password")
  isAdmin   Boolean  @default(false) @map("is_admin")
  createdAt DateTime @default(now()) @map("created_at")

  @@id([id])
  @@unique([email])
  @@map("users")
}

enum FilmGenre {
  horror
  fantastic
  drama
  melodrama
  comedy
  romance

  @@map("film_genres")
}




model Films {
  id          String    @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  title       String    @map("title") @db.VarChar(32)
  description String    @map("description") @db.VarChar(32)
  year        String    @map("year") @db.VarChar(32)
  duration    String    @map("duration") @db.VarChar(32)
  link        String    @map("link")
  views       Int       @map("views")
  genre       FilmGenre @map("genre")
  createdAt   DateTime  @map("created_at") @default(now())
  deletedAt   DateTime? @map("deleted_at")

  @@id([id])
  @@map("films")
}




model Otps {
  id        String   @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  otp       String   @map("otp")
  email     String   @map("email")
  createdAt DateTime @default(now()) @map("created_at")

  @@id([id])
  @@map("otp")
}
